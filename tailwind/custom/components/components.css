/**
 * Custom styles to immediately follow Tailwind’s `components` layer
 *
 * “Add more opinionated, complex classes like buttons, form controls, alerts,
 * etc; the sort of pre-built components you often see in other frameworks that
 * you might need to override with utility classes.”
 *
 * — from https://tailwindcss.com/docs/plugins#adding-components
 */

/**
 * Post title styles
 *
 * These will be applied to all headings with an `entry-title` class on the
 * frontend and to the post heading in the block editor.
 *
 * The supplied styles are meant to match the default `h1` classes from
 * Tailwind Typography.
 *
 * The `$post-title-selector` variable is replaced by PostCSS. Please see the
 * `postcss.config.js` file for details.
 */
 $(post-title-selector) {
	@apply mx-auto mb-6 max-w-content text-3xl font-extrabold text-neutral-900;
}

/**
 * Post content styles (via Tailwind Typography)
 *
 * These will be applied to all content blocks with an `entry-content` class on
 * the frontend and within the block editor.
 *
 * The `$post-content-selector` variable is replaced by PostCSS. Please see the
 * `postcss.config.js` file for details.
 *
 * For details on how to customize Tailwind Typography via its modifier
 * classes, please see:
 *
 * https://tailwindcss.com/docs/typography-plugin
 */

/* Button components */
@layer components {
	.button-primary {
		@apply inline-block text-center text-base tracking-[2px] min-w-[170px] md:text-lg uppercase font-sans leading-snug py-3 px-5 no-underline;
	}

	.button-secondary {
		@apply inline-block text-center text-sm tracking-[2px] min-w-[124px] md:text-base uppercase font-sans leading-snug py-1.5 px-2 no-underline;
	}
	
	.button-col-primary {
		@apply bg-grey-900 border border-grey-900 text-white transition-all hover:bg-white hover:text-grey-900;
	}
	
	.button-col-secondary {
		@apply bg-white border border-white text-grey-900 transition-all hover:bg-grey hover:text-white;
	}

	.button-col-tertiary {
		@apply bg-grey-700 border border-grey-700 text-white transition-all hover:bg-grey-600 hover:text-white;
	}
}

/* Heading components */
@layer components {
	.heading-1 {
		@apply  text-theme-text-heading font-sans font-bold text-4xl leading-tight lg:text-[4rem];
	}
	
	.heading-2 {
		@apply  text-theme-text-heading font-sans font-bold text-3xl leading-tight lg:text-5xl;
	}

	.heading-3 {
		@apply  text-theme-text-heading font-sans font-bold text-2xl leading-tight lg:text-4xl;
	}

	.heading-4 {
		@apply  text-theme-text-heading font-sans font-bold text-xl leading-tight lg:text-3xl;
	}

	.heading-5 {
		@apply  text-theme-text-heading font-sans font-bold text-xl leading-tight lg:text-2xl;
	}

	.heading-6 {
		@apply  text-theme-text-heading font-sans font-bold text-lg leading-tight lg:text-xl;
	}

	.subheading {
		@apply  text-theme-text-heading font-sans text-[18px] lg:text-xl leading-[30px] max-w-3xl m-auto;
	}
}

/* Theme components */
@layer components {
	.category-label {
		@apply 	inline-block no-underline text-sm w-auto bg-grey-700 text-white uppercase px-1 hover:bg-primary;
	}

	.container {
		@apply sm:max-w-[640px] md:max-w-[768px] lg:max-w-[1024px] xl:max-w-[1200px] mx-auto;
	}

	/* What's the point in this container class? It's just a single utility class? */
	.container-full {
		@apply w-full;
	}

	/* .mobile-padding {
		@apply px-[30px] sm:px-0 min-[840px]:px-0;
	} */

	.responsive-video {
		@apply relative h-0 w-full pb-[56.25%];
	}

	.responsive-video iframe {
		@apply absolute top-0 left-0 right-0 w-full h-full;
	}


}